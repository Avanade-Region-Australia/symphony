name: "Template-Query-Event"

on:
  workflow_call:
    outputs:
      events: 
        description: "Json array with events"
        value: ${{ jobs.QueryEvent.outputs.events}}
    inputs:
      pipelineName:
        type: string
        required: true
      eventName:
          type: string
          required: true
      eventGroupId:
        type: string
        required: true
      keyVaultName:
        type: string
        required: true
    secrets:
      azureEnviromentCredentials:
        required: true

jobs:
  QueryEvent:
    name: Query Events
    runs-on: ubuntu-latest
    outputs:
      events: ${{ steps.QueryEvents.outputs.events }}
    steps:
      - uses: actions/checkout@v4
      - uses: Azure/login@v1
        name: Run Azure Login
        with:
          creds: "${{ secrets.azureEnviromentCredentials }}"
          environment: "AzureCloud"

      - name: Get KeyVault Secret(s)
        id: LoadSecrets
        env:
          SECRETS: "clientId, clientSecret, subscriptionId, tenantId, eventsStorageAccount, eventsTableName"
        run: |
          OIFS=$IFS
          IFS=', '
          for secretname in $SECRETS
          do
            secret=$(az keyvault secret show --name $secretname --vault-name ${{ inputs.keyVaultName }} --query "value")
            echo "::add-mask::$secret"
            echo "$secretname=$secret" >> $GITHUB_OUTPUT
          done
          IFS=$OIFS

      - name: Query Events
        id: QueryEvents
        env:
          WORKSPACE_PATH: ${{ github.workspace }}
        run: |
          export ARM_TENANT_ID=${{ steps.LoadSecrets.outputs.tenantId }}
          export ARM_SUBSCRIPTION_ID=${{ steps.LoadSecrets.outputs.subscriptionId }}
          export ARM_CLIENT_ID=${{ steps.LoadSecrets.outputs.clientId }}
          export ARM_CLIENT_SECRET=${{ steps.LoadSecrets.outputs.clientSecret }}
          export EVENTS_STORAGE_ACCOUNT=${{ steps.LoadSecrets.outputs.eventsStorageAccount }}
          export EVENTS_TABLE_NAME=${{ steps.LoadSecrets.outputs.eventsTableName }}
          
          source ./events.sh

          events=$(query_events "${{ inputs.pipelineName }}" "${{ inputs.eventName }}" "${{ inputs.eventGroupId }}")
          echo "events=$events" >> $GITHUB_OUTPUT

        working-directory: scripts/orchestrators
